import { Template } from '@blastjs/blast';

Template.__checkName('__dynamic');
Template.__dynamic = new Template('Template.__dynamic', (function () { const view = this; return [Blast.View('lookup:checkContext', () => Spacebars.mustache(view.lookup('checkContext'))), '\n  ', Blast.If(() => Spacebars.call(view.lookup('dataContextPresent')), (() => ['\n    ', Spacebars.include(view.lookupTemplate('__dynamicWithDataContext'), (() => Blast._InOuterTemplateScope(view, () => Spacebars.include(() => Spacebars.call(view.templateContentBlock))))), '\n  ']), (() => ['\n    \n    ', Blast._TemplateWith(() => ({ template: Spacebars.call(view.lookup('template')), data: Spacebars.call(view.lookup('..')) }), () => Spacebars.include(view.lookupTemplate('__dynamicWithDataContext'), (() => Blast._InOuterTemplateScope(view, () => Spacebars.include(() => Spacebars.call(view.templateContentBlock)))))), '\n  ']))]; }));

Template.__checkName('__dynamicWithDataContext');
Template.__dynamicWithDataContext = new Template('Template.__dynamicWithDataContext', (function () { const view = this; return Spacebars.With(() => Spacebars.dataMustache(view.lookup('chooseTemplate'), view.lookup('template')), (() => ['\n    \n    ', Blast._TemplateWith(() => Spacebars.call(Spacebars.dot(view.lookup('..'), 'data')), () => Spacebars.include(view.lookupTemplate('..'), (() => Blast._InOuterTemplateScope(view, () => Spacebars.include(() => Spacebars.call(view.templateContentBlock)))))), '\n  '])); }));
